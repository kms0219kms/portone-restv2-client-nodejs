import type {RequestInstance} from '../common/request';
import type {paths} from '../types/v2'; // generated by openapi-typescript

/**
 * 에스크로 관련 API
 *
 * @description 에스크로와 관련된 API 기능을 제공합니다.
 */
export const escrow = (
  _request: RequestInstance,
  options?: {storeId?: string}
) => {
  return {
    /**
     * 에스크로 배송 정보 등록
     *
     * @description 에스크로 배송 정보 등록
     * 에스크로 배송 정보를 등록합니다.
     */
    registerEscrowLogistics: (
      params: paths['/payments/{paymentId}/escrow/logistics']['post']['parameters']['path'],
      body: paths['/payments/{paymentId}/escrow/logistics']['post']['requestBody']['content']['application/json']
    ) => {
      return _request.POST('/payments/{paymentId}/escrow/logistics', {
        params: {
          path: {paymentId: params.paymentId},
        },
        body: {
          ...body,
          storeId: body.storeId || options?.storeId || undefined,
        },
      });
    },
    /**
     * 에스크로 배송 정보 수정
     *
     * @description 에스크로 배송 정보 수정
     * 에스크로 배송 정보를 수정합니다.
     */
    updateEscrowLogistics: (
      params: paths['/payments/{paymentId}/escrow/logistics']['patch']['parameters']['path'],
      body: paths['/payments/{paymentId}/escrow/logistics']['patch']['requestBody']['content']['application/json']
    ) => {
      return _request.PATCH('/payments/{paymentId}/escrow/logistics', {
        params: {
          path: {paymentId: params.paymentId},
        },
        body: {
          ...body,
          storeId: body.storeId || options?.storeId || undefined,
        },
      });
    },
    /**
     * 에스크로 구매 확정
     *
     * @description 에스크로 구매 확정
     * 에스크로 결제를 구매 확정 처리합니다
     */
    confirmEscrow: (
      params: paths['/payments/{paymentId}/escrow/complete']['post']['parameters']['path'],
      body?: paths['/payments/{paymentId}/escrow/complete']['post']['requestBody']['content']['application/json']
    ) => {
      return _request.POST('/payments/{paymentId}/escrow/complete', {
        params: {
          path: {paymentId: params.paymentId},
        },
        body: body
          ? {
              ...body,
              storeId: body.storeId || options?.storeId || undefined,
            }
          : {},
      });
    },
  };
};
